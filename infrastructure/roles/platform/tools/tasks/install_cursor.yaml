---
- name: Install dependencies for Cursor
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - ca-certificates
      - gnupg
      - lsb-release
      - jq

- name: Get user home directory
  shell: "echo $HOME"
  register: user_home
  become: false
  changed_when: false

- name: Check if Cursor is already installed and working
  shell: |
    if which cursor >/dev/null 2>&1 && [ -f "/opt/cursor/cursor.AppImage" ]; then
      echo "Cursor properly installed"
      exit 0
    else
      echo "Cursor not installed"
      exit 1
    fi
  register: cursor_installed
  failed_when: false
  changed_when: false

- name: Check if Cursor desktop entry exists
  stat:
    path: "{{ user_home.stdout }}/Desktop/Cursor.desktop"
  register: cursor_desktop_exists
  become: false

- name: Check if Cursor icon exists in destination
  stat:
    path: /opt/cursor/cursor-ai.png
  register: cursor_icon_exists

- name: Remove corrupted Cursor AppImage if it exists
  file:
    path: /opt/cursor/cursor.AppImage
    state: absent
  when: cursor_installed.rc != 0

- name: Create temporary directory for Cursor download
  tempfile:
    state: directory
    suffix: cursor
  register: cursor_temp_dir
  when: cursor_installed.rc != 0

- name: Download Cursor AppImage
  shell: |
    download_url="{{ cursor_download_url | default('https://downloads.cursor.com/production/53b99ce608cba35127ae3a050c1738a959750865/linux/x64/Cursor-1.0.0-x86_64.AppImage') }}"
    curl -L -o "{{ cursor_temp_dir.path }}/cursor.AppImage" "$download_url"
    chmod +x "{{ cursor_temp_dir.path }}/cursor.AppImage"
  register: download_result
  when: cursor_installed.rc != 0

- name: Verify downloaded file is an AppImage
  shell: |
    if file "{{ cursor_temp_dir.path }}/cursor.AppImage" | grep -E "(executable|ELF)"; then
      echo "File is a valid executable"
    else
      echo "ERROR: Downloaded file is not an executable binary!"
      exit 1
    fi
  register: file_check
  when: cursor_installed.rc != 0

- name: Create Cursor installation directory
  file:
    path: /opt/cursor
    state: directory
    mode: '0755'
  when: cursor_installed.rc != 0

- name: Ensure Cursor directory exists for icon
  file:
    path: /opt/cursor
    state: directory
    mode: '0755'
  when: not cursor_icon_exists.stat.exists

- name: Copy Cursor icon
  copy:
    src: cursor-ai.png
    dest: /opt/cursor/cursor-ai.png
    mode: '0644'
  when: not cursor_icon_exists.stat.exists

- name: Install Cursor AppImage
  copy:
    src: "{{ cursor_temp_dir.path }}/cursor.AppImage"
    dest: /opt/cursor/cursor.AppImage
    mode: '0755'
    remote_src: yes
  when: cursor_installed.rc != 0

- name: Create Cursor executable wrapper
  copy:
    dest: /usr/local/bin/cursor
    content: |
      #!/bin/bash
      exec /opt/cursor/cursor.AppImage "$@"
    mode: '0755'
  when: cursor_installed.rc != 0

- name: Clean up temporary directory
  file:
    path: "{{ cursor_temp_dir.path }}"
    state: absent
  when: cursor_installed.rc != 0 and cursor_temp_dir.path is defined

- name: Verify Cursor installation
  shell: |
    if [ -x "/opt/cursor/cursor.AppImage" ]; then
      /opt/cursor/cursor.AppImage --version 2>/dev/null || echo "Cursor installed successfully"
    else
      echo "Cursor AppImage not found or not executable"
      exit 1
    fi
  register: cursor_version_check
  changed_when: false
  failed_when: false

- name: Ensure Desktop directory exists
  file:
    path: "{{ user_home.stdout }}/Desktop"
    state: directory
    mode: '0755'
  become: false
  when: not cursor_desktop_exists.stat.exists

- name: Create Cursor desktop entry
  copy:
    dest: "{{ user_home.stdout }}/Desktop/Cursor.desktop"
    content: |
      [Desktop Entry]
      Comment[en_US]=
      Comment=
      Exec=cursor --no-sandbox
      GenericName[en_US]=
      GenericName=
      Icon=/opt/cursor/cursor-ai.png
      MimeType=
      Name[en_US]=Cursor
      Name=Cursor
      Path=
      StartupNotify=true
      Terminal=false
      Type=Application
    mode: '0755'
  become: false
  when: not cursor_desktop_exists.stat.exists

- name: Add Cursor to user's local bin (symlink)
  file:
    src: /usr/local/bin/cursor
    dest: "{{ user_home.stdout }}/.local/bin/cursor"
    state: link
    force: yes
  become: false
  when: cursor_installed.rc != 0

- name: Display Cursor installation summary
  debug:
    msg:
      - "Cursor installation completed"
      - "Status: {{ cursor_version_check.stdout if cursor_version_check.stdout is defined else 'Installation attempted' }}"
      - "Executable: /usr/local/bin/cursor"
      - "AppImage: /opt/cursor/cursor.AppImage"
      - "Desktop entry: {{ user_home.stdout }}/Desktop/Cursor.desktop"
      - "User symlink: {{ user_home.stdout }}/.local/bin/cursor"
      - "You can launch Cursor from applications menu or run 'cursor' in terminal"
