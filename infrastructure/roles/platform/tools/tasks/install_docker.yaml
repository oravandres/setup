---
- name: Remove existing Docker repository configurations
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/apt/sources.list.d/docker.list
    - /etc/apt/sources.list.d/docker.list.save
    - /etc/apt/sources.list.d/archive_uri-https_download_docker_com_linux_ubuntu-jammy.list
    - /etc/apt/sources.list.d/archive_uri-https_download_docker_com_linux_ubuntu-noble.list

- name: Remove existing Docker GPG keys
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/apt/keyrings/docker.asc
    - /etc/apt/keyrings/docker.gpg
    - /etc/apt/trusted.gpg.d/docker.gpg
    - /usr/share/keyrings/docker-archive-keyring.gpg

- name: Update apt cache after cleanup
  apt:
    update_cache: yes

- name: Uninstall old versions of Docker
  apt:
    name:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc
    state: absent
    purge: yes

- name: Install prerequisites for Docker repository
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - software-properties-common
    state: present

- name: Create directory for Docker GPG key
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Docker GPG key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'

- name: Set proper permissions on Docker GPG key
  ansible.builtin.file:
    path: /etc/apt/keyrings/docker.asc
    mode: a+r

- name: Add Docker repository
  ansible.builtin.shell: |
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
  args:
    creates: /etc/apt/sources.list.d/docker.list

- name: Update apt package index
  apt:
    update_cache: yes

- name: Install Docker Engine, CLI, containerd, and Compose plugin
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present

- name: Add user to docker group
  user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: yes

- name: Start and enable Docker service
  systemd:
    name: docker
    state: started
    enabled: yes
    daemon_reload: yes

- name: Verify Docker installation
  command: docker --version
  register: docker_version
  changed_when: false

- name: Verify Docker Compose plugin
  command: docker compose version
  register: docker_compose_plugin_version
  changed_when: false
  ignore_errors: true

- name: Display Docker installation summary
  debug:
    msg:
      - "Docker version: {{ docker_version.stdout }}"
      - "Docker Compose plugin: {{ docker_compose_plugin_version.stdout | default('Not available') }}"
      - "User {{ ansible_user_id }} added to docker group"
      - "Note: You may need to log out and back in for group membership to take effect" 