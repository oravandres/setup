---
- name: Check if kubectl is already installed
  command: kubectl version --client
  register: kubectl_installed
  failed_when: false
  changed_when: false
  ignore_errors: true

- name: Install dependencies for kubectl
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
  when: kubectl_installed.rc != 0

- name: Create directory for Kubernetes GPG key
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
  when: kubectl_installed.rc != 0

- name: Download Kubernetes GPG key
  ansible.builtin.get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key
    dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
    mode: '0644'
  when: kubectl_installed.rc != 0

- name: Set proper permissions on Kubernetes GPG key
  ansible.builtin.file:
    path: /etc/apt/keyrings/kubernetes-apt-keyring.asc
    mode: a+r
  when: kubectl_installed.rc != 0

- name: Add Kubernetes repository
  ansible.builtin.shell: |
    echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list
  args:
    creates: /etc/apt/sources.list.d/kubernetes.list
  when: kubectl_installed.rc != 0

- name: Update apt package index
  apt:
    update_cache: yes
  when: kubectl_installed.rc != 0

- name: Install kubectl
  apt:
    name: kubectl
    state: present
  when: kubectl_installed.rc != 0

- name: Verify kubectl installation
  command: kubectl version --client
  register: kubectl_version
  changed_when: false

- name: Display kubectl installation summary
  debug:
    msg:
      - "kubectl version: {{ kubectl_version.stdout }}"
      - "kubectl installed successfully"
      - "You can now use kubectl to interact with Kubernetes clusters"
