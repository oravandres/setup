---
- name: Check if NVM is already installed
  stat:
    path: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
  register: nvm_installed
  become: false

- name: Install dependencies for Node.js/NVM
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - curl
      - build-essential
      - libssl-dev
  when: not nvm_installed.stat.exists

- name: Install NVM (latest version)
  shell: |
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
  args:
    creates: "{{ ansible_env.HOME }}/.nvm"
  become: false
  when: not nvm_installed.stat.exists

- name: Ensure NVM is sourced in .zshrc
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    marker: "# {mark} ANSIBLE MANAGED BLOCK NVM"
    block: |
      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
      [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
    create: yes
  become: false
  when: ansible_env.SHELL is defined and 'zsh' in ansible_env.SHELL

- name: Ensure NVM is sourced in .bashrc
  blockinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    marker: "# {mark} ANSIBLE MANAGED BLOCK NVM"
    block: |
      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
      [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
    create: yes
  become: false
  when: ansible_env.SHELL is defined and 'bash' in ansible_env.SHELL

- name: Install Node.js LTS and latest using NVM
  shell: |
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    nvm install --lts
    nvm install node
    nvm use --lts
    nvm alias default lts/*
  environment:
    HOME: "{{ ansible_env.HOME }}"
  args:
    executable: /bin/bash
  become: false

- name: Install essential npm packages globally
  shell: |
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    npm install -g yarn pnpm npm-check-updates eslint prettier
  environment:
    HOME: "{{ ansible_env.HOME }}"
  args:
    executable: /bin/bash
  become: false
  ignore_errors: yes

- name: Verify Node.js installation
  shell: |
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    node --version
  environment:
    HOME: "{{ ansible_env.HOME }}"
  args:
    executable: /bin/bash
  register: node_version
  changed_when: false
  become: false

- name: Verify npm installation
  shell: |
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    npm --version
  environment:
    HOME: "{{ ansible_env.HOME }}"
  args:
    executable: /bin/bash
  register: npm_version
  changed_when: false
  become: false

- name: Display Node.js installation summary
  debug:
    msg: 
      - "Node.js version: {{ node_version.stdout }}"
      - "npm version: {{ npm_version.stdout }}"
      - "NVM installed at: {{ ansible_env.HOME }}/.nvm"
