---
- name: Install Zsh and related tools
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - zsh
      - bat
      - git

- name: Get user home directory
  shell: "echo $HOME"
  register: user_home
  become: false
  changed_when: false

- name: Check if Oh My Zsh is already installed
  stat:
    path: "{{ user_home.stdout }}/.oh-my-zsh"
  register: ohmyzsh_installed
  become: false

- name: Check Oh My Zsh ownership if it exists
  shell: "ls -ld {{ user_home.stdout }}/.oh-my-zsh"
  register: ohmyzsh_ownership_check
  become: false
  changed_when: false
  failed_when: false
  when: ohmyzsh_installed.stat.exists

- name: Remove Oh My Zsh if owned by root
  file:
    path: "{{ user_home.stdout }}/.oh-my-zsh"
    state: absent
  become: true
  when: ohmyzsh_installed.stat.exists and ohmyzsh_ownership_check.stdout is defined and 'root' in ohmyzsh_ownership_check.stdout

- name: Install Oh My Zsh as user
  shell: |
    export HOME="{{ user_home.stdout }}"
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
  args:
    creates: "{{ user_home.stdout }}/.oh-my-zsh"
  environment:
    ZSH: "{{ user_home.stdout }}/.oh-my-zsh"
    HOME: "{{ user_home.stdout }}"
  become: false

- name: Verify Oh My Zsh ownership
  shell: "ls -ld {{ user_home.stdout }}/.oh-my-zsh"
  register: final_ownership_check
  become: false
  changed_when: false

- name: Create Oh My Zsh custom plugins directory structure
  file:
    path: "{{ user_home.stdout }}/.oh-my-zsh/custom/plugins"
    state: directory
    mode: '0755'
  become: false

- name: Install zsh-autosuggestions plugin
  shell: |
    if [ ! -d "{{ user_home.stdout }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions" ]; then
      git clone https://github.com/zsh-users/zsh-autosuggestions {{ user_home.stdout }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions
    else
      cd {{ user_home.stdout }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions && git pull
    fi
  become: false
  changed_when: false

- name: Install zsh-syntax-highlighting plugin
  shell: |
    if [ ! -d "{{ user_home.stdout }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting" ]; then
      git clone https://github.com/zsh-users/zsh-syntax-highlighting.git {{ user_home.stdout }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
    else
      cd {{ user_home.stdout }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting && git pull
    fi
  become: false
  changed_when: false

- name: Install zsh-bat plugin
  shell: |
    if [ ! -d "{{ user_home.stdout }}/.oh-my-zsh/custom/plugins/zsh-bat" ]; then
      git clone https://github.com/fdellwing/zsh-bat.git {{ user_home.stdout }}/.oh-my-zsh/custom/plugins/zsh-bat
    else
      cd {{ user_home.stdout }}/.oh-my-zsh/custom/plugins/zsh-bat && git pull
    fi
  become: false
  changed_when: false

- name: Configure Oh My Zsh plugins in .zshrc
  lineinfile:
    path: "{{ user_home.stdout }}/.zshrc"
    regexp: '^plugins=.*'
    line: 'plugins=(git zsh-autosuggestions zsh-syntax-highlighting zsh-bat docker kubectl helm npm node python pip)'
    backup: yes
  become: false

- name: Configure Oh My Zsh theme
  lineinfile:
    path: "{{ user_home.stdout }}/.zshrc"
    regexp: '^ZSH_THEME=.*'
    line: 'ZSH_THEME="robbyrussell"'
    backup: yes
  become: false

- name: Create .aliases file with comprehensive aliases
  copy:
    dest: "{{ user_home.stdout }}/.aliases"
    content: |
      # Directory Navigation & Listing
      alias la='ls -lah --group-directories-first --color=auto'

      # File Operations (with safety)
      alias rm='rm -i'
      alias cp='cp -i'
      alias mv='mv -i'
      alias mkdir='mkdir -pv'

      # Grep with color
      alias grep='grep --color=auto'
      alias fgrep='fgrep --color=auto'
      alias egrep='egrep --color=auto'

      # bat/cat aliases
      alias cat="batcat"
      alias bat="batcat"

      # Git shortcuts
      alias add='git add'
      alias commit='git commit -m'
      alias status='git status'
      alias push='git push'
      alias pull='git pull'
      alias checkout='git checkout'
      alias branch='git checkout -b'
      alias merge='git merge'

      # System monitoring
      alias h='history'
      alias top='htop'
      alias df='df -h'
      alias du='du -h'
      alias free='free -h'
      alias ps='ps aux'

      # Network
      alias ping='ping -c 5'
      alias ports='netstat -tulanp'
      alias myip='curl -s ipinfo.io/ip'
      alias localip="ip route get 1.1.1.1 | awk '{print \$7}'"

      # File finding and searching
      alias ff='find . -type f -name'
      alias fd='find . -type d -name'

      # Text processing
      alias count='wc -l'
      alias wc='wc -l'

      # Archives
      alias untar='tar -zxvf'
      alias tar='tar -czvf'

      # Python
      alias python='python3'
      alias pip='pip3'
      alias venv='python3 -m venv'
      alias activate='source venv/bin/activate'

      # Node.js
      alias install='npm install'
      alias install-dev='npm install --save-dev'
      alias install-global='npm install -g'
      alias run='npm run'
      alias start='npm start'
      alias run-test='npm test'
      alias build='npm run build'

      # Quick edits
      alias bashrc='${EDITOR:-nano} ~/.bashrc'
      alias zshrc='${EDITOR:-nano} ~/.zshrc'
      alias aliases='${EDITOR:-nano} ~/.aliases'
      alias vimrc='${EDITOR:-nano} ~/.vimrc'

      # System shortcuts
      alias reload='source ~/.zshrc'
      alias path='echo -e ${PATH//:/\\n}'
      alias now='date +"%T"'

      # Directory shortcuts
      alias dl='cd ~/Downloads'
      alias docs='cd ~/Documents'
      alias proj='cd ~/Projects'

      # Safety aliases
      alias reboot='sudo reboot'
      alias shutdown='sudo shutdown -h now'

      # Memory and disk usage
      alias meminfo='free -m -l -t'
      alias psmem='ps auxf | sort -nr -k 4 | head -10'
      alias pscpu='ps auxf | sort -nr -k 3 | head -10'
      alias diskusage='du -sh * | sort -hr'

      # Colorize output
      alias mount='mount | column -t'
      alias logs='sudo tail -f /var/log/messages'

      # Make some commands more verbose
      alias chown='chown --preserve-root'
      alias chmod='chmod --preserve-root'
      alias chgrp='chgrp --preserve-root'
    mode: '0644'
  become: false

- name: Add custom zsh configuration
  blockinfile:
    path: "{{ user_home.stdout }}/.zshrc"
    marker: "# {mark} ANSIBLE MANAGED BLOCK ZSH CUSTOM"
    block: |
      # Custom configuration
      export DEFAULT_USER="$USER"
      
      # Enable command auto-correction
      ENABLE_CORRECTION="true"
      
      # Enable command execution time display for long commands
      HIST_STAMPS="yyyy-mm-dd"
      
      # Autosuggestions configuration
      ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#666666"
      ZSH_AUTOSUGGEST_STRATEGY=(history completion)
      
      # Bat (better cat) configuration
      export BAT_THEME="TwoDark"
      
      # Source aliases file
      if [ -f ~/.aliases ]; then
          source ~/.aliases
      fi
    create: yes
  become: false

- name: Set zsh as default shell for user
  user:
    name: "{{ ansible_user_id }}"
    shell: /bin/zsh

- name: Verify zsh plugins installation
  stat:
    path: "{{ item }}"
  register: plugin_check
  with_items:
    - "{{ user_home.stdout }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
    - "{{ user_home.stdout }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
    - "{{ user_home.stdout }}/.oh-my-zsh/custom/plugins/zsh-bat"
  become: false

- name: Verify bat installation
  command: batcat --version
  register: bat_version
  changed_when: false

- name: Display zsh setup summary
  debug:
    msg: 
      - "Oh My Zsh installed at: {{ user_home.stdout }}/.oh-my-zsh"
      - "Plugins installed: git, zsh-autosuggestions, zsh-syntax-highlighting, zsh-bat, docker, kubectl, helm, npm, node, python, pip"
      - "Theme: robbyrussell"
      - "Bat version: {{ bat_version.stdout }}"
      - "Default shell set to: /bin/zsh"
      - "User: {{ ansible_user_id }}"
